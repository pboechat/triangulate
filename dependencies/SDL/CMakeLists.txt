cmake_minimum_required(VERSION 3.10)

project(SDL)

# TODO: Support other platforms.
if(NOT WIN32)
	message(FATAL "platfom not supported")
endif()

file(GLOB HEADERS "${PROJECT_SOURCE_DIR}/include/*.h")
set(SOURCES 
	"${PROJECT_SOURCE_DIR}/src/SDL.c"
	"${PROJECT_SOURCE_DIR}/src/events/SDL_active.c"
	"${PROJECT_SOURCE_DIR}/src/audio/SDL_audio.c"
	"${PROJECT_SOURCE_DIR}/src/audio/SDL_audio_c.h"
	"${PROJECT_SOURCE_DIR}/src/audio/SDL_audiocvt.c"
	"${PROJECT_SOURCE_DIR}/src/audio/SDL_audiomem.h"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_blit.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_blit.h"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_blit_0.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_blit_1.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_blit_A.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_blit_N.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_bmp.c"
	"${PROJECT_SOURCE_DIR}/src/cdrom/SDL_cdrom.c"
	"${PROJECT_SOURCE_DIR}/src/cpuinfo/SDL_cpuinfo.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_cursor.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_cursor_c.h"
	"${PROJECT_SOURCE_DIR}/src/audio/windib/SDL_dibaudio.c"
	"${PROJECT_SOURCE_DIR}/src/audio/windib/SDL_dibaudio.h"
	"${PROJECT_SOURCE_DIR}/src/video/windib/SDL_dibevents.c"
	"${PROJECT_SOURCE_DIR}/src/video/windib/SDL_dibevents_c.h"
	"${PROJECT_SOURCE_DIR}/src/video/windib/SDL_dibvideo.c"
	"${PROJECT_SOURCE_DIR}/src/video/windib/SDL_dibvideo.h"
	"${PROJECT_SOURCE_DIR}/src/audio/disk/SDL_diskaudio.c"
	"${PROJECT_SOURCE_DIR}/src/audio/disk/SDL_diskaudio.h"
	"${PROJECT_SOURCE_DIR}/src/audio/dummy/SDL_dummyaudio.c"
	"${PROJECT_SOURCE_DIR}/src/audio/dummy/SDL_dummyaudio.h"
	"${PROJECT_SOURCE_DIR}/src/audio/windx5/SDL_dx5audio.c"
	"${PROJECT_SOURCE_DIR}/src/audio/windx5/SDL_dx5audio.h"
	"${PROJECT_SOURCE_DIR}/src/video/Windx5/SDL_dx5events.c"
	"${PROJECT_SOURCE_DIR}/src/video/Windx5/SDL_dx5events_c.h"
	"${PROJECT_SOURCE_DIR}/src/video/Windx5/SDL_dx5video.c"
	"${PROJECT_SOURCE_DIR}/src/video/Windx5/SDL_dx5video.h"
	"${PROJECT_SOURCE_DIR}/src/video/windx5/SDL_dx5yuv.c"
	"${PROJECT_SOURCE_DIR}/src/video/windx5/SDL_dx5yuv_c.h"
	"${PROJECT_SOURCE_DIR}/src/SDL_error.c"
	"${PROJECT_SOURCE_DIR}/src/SDL_error_c.h"
	"${PROJECT_SOURCE_DIR}/src/events/SDL_events.c"
	"${PROJECT_SOURCE_DIR}/src/events/SDL_events_c.h"
	"${PROJECT_SOURCE_DIR}/src/events/SDL_expose.c"
	"${PROJECT_SOURCE_DIR}/src/SDL_fatal.c"
	"${PROJECT_SOURCE_DIR}/src/SDL_fatal.h"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_gamma.c"
	"${PROJECT_SOURCE_DIR}/src/stdlib/SDL_getenv.c"
	"${PROJECT_SOURCE_DIR}/src/stdlib/SDL_iconv.c"
	"${PROJECT_SOURCE_DIR}/src/joystick/SDL_joystick.c"
	"${PROJECT_SOURCE_DIR}/src/joystick/SDL_joystick_c.h"
	"${PROJECT_SOURCE_DIR}/src/events/SDL_keyboard.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_leaks.h"
	"${PROJECT_SOURCE_DIR}/src/video/wincommon/SDL_lowvideo.h"
	"${PROJECT_SOURCE_DIR}/src/stdlib/SDL_malloc.c"
	"${PROJECT_SOURCE_DIR}/src/audio/SDL_mixer.c"
	"${PROJECT_SOURCE_DIR}/src/audio/SDL_mixer_MMX_VC.c"
	"${PROJECT_SOURCE_DIR}/src/joystick/win32/SDL_mmjoystick.c"
	"${PROJECT_SOURCE_DIR}/src/events/SDL_mouse.c"
	"${PROJECT_SOURCE_DIR}/src/video/dummy/SDL_nullevents.c"
	"${PROJECT_SOURCE_DIR}/src/video/dummy/SDL_nullevents_c.h"
	"${PROJECT_SOURCE_DIR}/src/video/dummy/SDL_nullmouse.c"
	"${PROJECT_SOURCE_DIR}/src/video/dummy/SDL_nullmouse_c.h"
	"${PROJECT_SOURCE_DIR}/src/video/dummy/SDL_nullvideo.c"
	"${PROJECT_SOURCE_DIR}/src/video/dummy/SDL_nullvideo.h"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_pixels.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_pixels_c.h"
	"${PROJECT_SOURCE_DIR}/src/stdlib/SDL_qsort.c"
	"${PROJECT_SOURCE_DIR}/src/events/SDL_quit.c"
	"${PROJECT_SOURCE_DIR}/src/events/SDL_resize.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_RLEaccel.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_RLEaccel_c.h"
	"${PROJECT_SOURCE_DIR}/src/file/SDL_rwops.c"
	"${PROJECT_SOURCE_DIR}/src/stdlib/SDL_stdlib.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_stretch.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_stretch_c.h"
	"${PROJECT_SOURCE_DIR}/src/stdlib/SDL_string.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_surface.c"
	"${PROJECT_SOURCE_DIR}/src/audio/SDL_sysaudio.h"
	"${PROJECT_SOURCE_DIR}/src/cdrom/win32/SDL_syscdrom.c"
	"${PROJECT_SOURCE_DIR}/src/cdrom/SDL_syscdrom.h"
	"${PROJECT_SOURCE_DIR}/src/thread/generic/SDL_syscond.c"
	"${PROJECT_SOURCE_DIR}/src/video/wincommon/SDL_sysevents.c"
	"${PROJECT_SOURCE_DIR}/src/events/SDL_sysevents.h"
	"${PROJECT_SOURCE_DIR}/src/joystick/SDL_sysjoystick.h"
	"${PROJECT_SOURCE_DIR}/src/loadso/win32/SDL_sysloadso.c"
	"${PROJECT_SOURCE_DIR}/src/video/wincommon/SDL_sysmouse.c"
	"${PROJECT_SOURCE_DIR}/src/video/wincommon/SDL_sysmouse_c.h"
	"${PROJECT_SOURCE_DIR}/src/thread/win32/SDL_sysmutex.c"
	"${PROJECT_SOURCE_DIR}/src/thread/win32/SDL_syssem.c"
	"${PROJECT_SOURCE_DIR}/src/thread/win32/SDL_systhread.c"
	"${PROJECT_SOURCE_DIR}/src/thread/SDL_systhread.h"
	"${PROJECT_SOURCE_DIR}/src/thread/win32/SDL_systhread_c.h"
	"${PROJECT_SOURCE_DIR}/src/timer/win32/SDL_systimer.c"
	"${PROJECT_SOURCE_DIR}/src/timer/SDL_systimer.h"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_sysvideo.h"
	"${PROJECT_SOURCE_DIR}/src/video/wincommon/SDL_syswm.c"
	"${PROJECT_SOURCE_DIR}/src/video/wincommon/SDL_syswm_c.h"
	"${PROJECT_SOURCE_DIR}/src/thread/SDL_thread.c"
	"${PROJECT_SOURCE_DIR}/src/thread/SDL_thread_c.h"
	"${PROJECT_SOURCE_DIR}/src/timer/SDL_timer.c"
	"${PROJECT_SOURCE_DIR}/src/timer/SDL_timer_c.h"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_video.c"
	"${PROJECT_SOURCE_DIR}/src/video/windib/SDL_vkeys.h"
	"${PROJECT_SOURCE_DIR}/src/audio/SDL_wave.c"
	"${PROJECT_SOURCE_DIR}/src/audio/SDL_wave.h"
	"${PROJECT_SOURCE_DIR}/src/video/wincommon/SDL_wingl.c"
	"${PROJECT_SOURCE_DIR}/src/video/wincommon/SDL_wingl_c.h"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_yuv.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_yuv_sw.c"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_yuv_sw_c.h"
	"${PROJECT_SOURCE_DIR}/src/video/SDL_yuvfuncs.h"
	"${PROJECT_SOURCE_DIR}/src/video/wincommon/Wmmsg.h"
	"${PROJECT_SOURCE_DIR}/src/main/win32/SDL_win32_main.c"
)

source_group("include" FILES ${HEADERS})
source_group("src" FILES ${SOURCES})

add_library(${PROJECT_NAME} STATIC ${HEADERS} ${SOURCES})
target_include_directories(${PROJECT_NAME} PUBLIC ${PROJECT_SOURCE_DIR}/include)
target_compile_definitions(${PROJECT_NAME} PRIVATE _CRT_SECURE_NO_WARNINGS _CRT_NONSTDC_NO_WARNINGS NO_GAMMA_SUPPORT)
target_link_libraries(${PROJECT_NAME} winmm dxguid)
